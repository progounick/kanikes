- name: Deploy instructions
  hosts: algotech-remote-machine
  remote_user: ubuntu
  become: true
  become_method: sudo
  vars_files:
    - vars.yml
  tasks:
    - name: Disable service if running
      systemd:
        name: algotech-{{app_name}}
        state: stopped
    - name: Erase app home
      file:
        state: absent
        path: "{{app_home}}"
    - name: Create application home
      file:
        path: "{{app_home}}"
        recurse: true
        state: directory
        owner: "{{at_user}}"
        group: "{{at_user}}"
    - name: Deploy JAR
      copy:
        src: ../../../build/libs/{{app_name}}-all.jar
        dest: "{{app_home}}/{{app_name}}-all.jar"
        owner: "{{at_user}}"
        group: "{{at_user}}"
    - name : Deploy entrypoint.sh script
      copy:
        src: "{{config_src}}/entrypoint.sh"
        dest: "{{app_home}}/entrypoint.sh"
        owner: "{{at_user}}"
        group: "{{at_user}}"
        mode: 0700
    - name: register common data bootstrap
      find:
          paths: "{{config_src}}/{{microservice}}/data-bootstrap"
          hidden: yes
          file_type: any
      delegate_to: localhost
      register: common_bootstrap

    - name: register phase data bootstrap
      find:
        paths: "{{config_src}}/{{microservice}}/{{phase}}/data-bootstrap"
        hidden: yes
        file_type: any
      delegate_to: localhost
      register: phase_bootstrap

    - name: register phase configuration files
      find:
        paths: "{{config_src}}/{{microservice}}/{{phase}}"
        hidden: yes
        file_type: file
      delegate_to: localhost
      register: phase_config_files

    - name: Deploy common bootstrap
      synchronize:
        src: "{{item.path}}"
        dest: "{{app_home}}/data-bootstrap"
      #        owner: "{{at_user}}"
      #        group: "{{at_user}}"
      with_items: "{{common_bootstrap.files}}"
      tags:
        - copy
    - name: Deploy phase bootstrap
      synchronize:
        src: "{{item.path}}"
        dest: "{{app_home}}/data-bootstrap"
      #        owner: "{{at_user}}"
      #        group: "{{at_user}}"
      with_items: "{{phase_bootstrap.files}}"
      tags:
        - copy
    - name: Deploy configuration files
      synchronize:
        src: "{{item.path}}"
        dest: "{{app_home}}/"
      #        owner: "{{at_user}}"
      #        group: "{{at_user}}"
      with_items: "{{phase_config_files.files}}"
      tags:
        - copy
    - name: Start {{app_name}} service
      systemd:
        name: algotech-{{app_name}}
        daemon_reload: true
        state: started
        enabled: true
